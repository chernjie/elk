input {
  lumberjack {
    port => 5043

    ssl_certificate => "etc/ssl/certs/selfsigned.crt"
    ssl_key => "etc/ssl/private/selfsigned.key"

    type => "logs"
  }
}
filter {
  if [type] == "syslog" {
    grok {
      match => { "message" => "%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{DATA:syslog_program}(?:\[%{POSINT:syslog_pid}\])?: %{GREEDYDATA:syslog_message}" }
      add_field => [ "received_at", "%{@timestamp}" ]
      add_field => [ "received_from", "%{host}" ]
    }
    syslog_pri { }
    date {
      match => [ "syslog_timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ]
    }
  }
  if [type] == "nginx-access" {
    grok {
      patterns_dir => "./etc/logstash/patterns"
      match => { "message" => "%{NGINXACCESS}" }
    }
  }
  if [type] == "magento" {
    grok {
      match => [ "message", "%{TIMESTAMP_ISO8601:timestamp} %{LOGLEVEL:priority_name} \(%{INT:priority_level}\): %{GREEDYDATA:log_message}" ]
      add_field => [ "received_at", "%{@timestamp}" ]
      add_field => [ "received_from", "%{host}" ]
    }
    mutate {
      replace => [ "message", "%{log_message}" ]
      replace => [ "@timestamp", "%{timestamp}" ]
    }
    multiline{
      pattern => "^%{TIMESTAMP_ISO8601:timestamp}"
      what => "previous"
      negate=> true
    }
  }
}
output {
  stdout {
      codec => rubydebug
  }

  elasticsearch {
      host => "elasticsearch.local"
      port => "9300"
  }
}
