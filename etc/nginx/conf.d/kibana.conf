upstream elasticsearch {
    server 127.0.0.1:9200 fail_timeout=1s weight=1;
}

server {
    if ($request_uri ~ "^/kibana/?$") {
        return 302 $scheme://$host/kibana/index.html;
    }

    listen 443 ssl;
    listen [::]:443 ssl;
    server_name _;

    ssl_certificate     /etc/ssl/certs/ssl-cert-snakeoil.pem;
    ssl_certificate_key /etc/ssl/private/ssl-cert-snakeoil.key;
    ssl_session_timeout 5m;
    ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers "HIGH:!aNULL:!MD5 or HIGH:!aNULL:!MD5:!3DES";
    ssl_prefer_server_ciphers on;

    access_log /var/log/nginx/kibana.access.log;
    error_log /var/log/nginx/kibana.error.log;

    # Nginx
    try_files $uri @ES;
    root /usr/share/nginx/html;

    # Elasticsearch
    location @ES {
        # Deny access to Cluster API
        # location ~ /_cluster {
        #    return 403;
        #     break;
        # }

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forward-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $http_host;
        proxy_redirect off;

        proxy_pass http://elasticsearch;

        # Password protect Kibana
        auth_basic "Restricted Access";
        auth_basic_user_file /etc/nginx/conf.d/.htpasswd;
    }
}
